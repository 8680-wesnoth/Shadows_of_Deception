#textdomain wesnoth-NX-RPG

# Places a unit on the map with boosted stats
#define BOOSTED_UNIT SIDE TYPE X Y ROLE MP HP MA MD RA RD RES
    [unit]
        side={SIDE}
        type={TYPE}
        x={X}
        y={Y}
        random_traits=no
        role={ROLE}
        [modifications]
            [object]
                silent=yes
                [effect]
                    apply_to=movement
                    increase={MP}
                [/effect]
                [effect]
                    apply_to=hitpoints
                    increase={HP}
                    increase_total={HP}
                [/effect]
                [effect]
                    apply_to=attack
                    range=melee
                    increase_attacks={MA}
                    increase_damage={MD}
                    duration=forever
                [/effect]
                [effect]
                    apply_to=attack
                    range=ranged
                    increase_attacks={RA}
                    increase_damage={RD}
                    duration=forever
                [/effect]
                [effect]
                    apply_to=resistance
                    replace=no
                    [resistance]
                        blade=-{RES}
                        pierce=-{RES}
                        impact=-{RES}
                        fire=-{RES}
                        cold=-{RES}
                        arcane=-{RES}
                    [/resistance]
                [/effect]
            [/object]
        [/modifications]
    [/unit]
#enddef

#define ADD_ABILITY _ABILITY
    [+unit]
        [modifications]
            [object]
                silent=yes
                [effect]
                    apply_to=new_ability
                    [abilities]
                        {ABILITY_{_ABILITY}}
                    [/abilities]
                [/effect]
            [/object]
        [/modifications]
    [/unit]
#enddef

# An alternative to the mainline PUT_TO_RECALL_LIST macro that actually resets
# the affected units' stats before storing in the recall list so they don't
# appear funny the next time they are recalled by the player.
#define RESET_AND_SEND_TO_RECALL_LIST _SUF
    [store_unit]
        [filter]
            {_SUF}
        [/filter]
        variable=temp_RESET_AND_SEND_TO_RECALL_LIST_store
        kill=yes
    [/store_unit]

    {FOREACH temp_RESET_AND_SEND_TO_RECALL_LIST_store temp_RESET_AND_SEND_TO_RECALL_LIST_k}
        # Use a pseudoreference so this doesn't become illegibly long.
        {VARIABLE temp_RESET_AND_SEND_TO_RECALL_LIST_var "temp_RESET_AND_SEND_TO_RECALL_LIST_store[$temp_RESET_AND_SEND_TO_RECALL_LIST_k]"}

        {CLEAR_VARIABLE $temp_RESET_AND_SEND_TO_RECALL_LIST_var|.status.uncovered}
        {CLEAR_VARIABLE $temp_RESET_AND_SEND_TO_RECALL_LIST_var|.status.poisoned}
        {CLEAR_VARIABLE $temp_RESET_AND_SEND_TO_RECALL_LIST_var|.status.slowed}
        {CLEAR_VARIABLE $temp_RESET_AND_SEND_TO_RECALL_LIST_var|.status.petrified}

        [set_variables]
            name=$temp_RESET_AND_SEND_TO_RECALL_LIST_var
            mode=merge
            [value]
                hitpoints=$$temp_RESET_AND_SEND_TO_RECALL_LIST_var|.max_hitpoints
                moves=0
                attacks_left=0
            [/value]
        [/set_variables]

        [unstore_unit]
            find_vacant=no
            variable=$temp_RESET_AND_SEND_TO_RECALL_LIST_var
            x,y=recall,recall
        [/unstore_unit]
    {NEXT temp_RESET_AND_SEND_TO_RECALL_LIST_k}

    {CLEAR_VARIABLE temp_RESET_AND_SEND_TO_RECALL_LIST_store,temp_RESET_AND_SEND_TO_RECALL_LIST_var}
#enddef
